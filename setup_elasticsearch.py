#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ Elasticsearch
"""

import os
import sys
import django
from django.conf import settings

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django_elasticsearch_dsl.registries import registry
from products.models import Product
from products.search_indexes import ProductDocument
import time

def check_elasticsearch_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Elasticsearch"""
    try:
        from elasticsearch import Elasticsearch
        es = Elasticsearch(['localhost:9200'])
        if es.ping():
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Elasticsearch —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Elasticsearch")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Elasticsearch: {e}")
        return False

def create_indexes():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤"""
    print("üîß –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ Elasticsearch...")
    
    try:
        for doc in registry.get_documents():
            print(f"–°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è {doc._doc_type.model.__name__}...")
            doc._index.create()
            print(f"‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è {doc._doc_type.model.__name__} —Å–æ–∑–¥–∞–Ω")
        
        print("‚úÖ –í—Å–µ –∏–Ω–¥–µ–∫—Å—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤: {e}")
        return False

def index_data():
    """–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö"""
    print("üìä –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        for doc in registry.get_documents():
            model = doc._doc_type.model
            print(f"–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è {model.__name__}...")
            
            # –ü–æ–ª—É—á–∞–µ–º queryset –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏
            queryset = doc().get_indexing_queryset()
            total_count = queryset.count()
            
            if total_count == 0:
                print(f"–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –≤ {model.__name__}")
                continue
            
            # –ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            doc().update(queryset)
            
            print(f"‚úÖ {model.__name__} –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω: {total_count} –∑–∞–ø–∏—Å–µ–π")
        
        print("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False

def check_index_status():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω–¥–µ–∫—Å–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–Ω–¥–µ–∫—Å–æ–≤...")
    
    try:
        for doc in registry.get_documents():
            index_name = doc._index._name
            model_name = doc._doc_type.model.__name__
            
            if doc._index.exists():
                stats = doc._index.stats()
                doc_count = stats['indices'][index_name]['total']['docs']['count']
                print(f"‚úÖ {model_name} -> {index_name} ({doc_count} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤)")
            else:
                print(f"‚ùå {model_name} -> {index_name} (–Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Elasticsearch –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not check_elasticsearch_connection():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Elasticsearch. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω.")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
    if not create_indexes():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–Ω–¥–µ–∫—Å—ã")
        return False
    
    # –ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    if not index_data():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if not check_index_status():
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞")
        return False
    
    print("üéâ Elasticsearch —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
    print("üìä Kibana: http://localhost:5601")
    print("üîç Elasticsearch: http://localhost:9200")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 