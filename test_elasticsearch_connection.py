#!/usr/bin/env python
import os
import sys
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings.development')
django.setup()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django
from products.search_indexes import ProductDocument

from elasticsearch import Elasticsearch
from django_elasticsearch_dsl.registries import registry

def test_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Elasticsearch"""
    try:
        print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Elasticsearch...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print(f"ELASTICSEARCH_ENABLED: {getattr(settings, 'ELASTICSEARCH_ENABLED', False)}")
        print(f"ELASTICSEARCH_DSL: {getattr(settings, 'ELASTICSEARCH_DSL', 'NOT_FOUND')}")
        
        # –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        es = Elasticsearch(['http://localhost:9200'])
        if es.ping():
            print("‚úÖ –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Elasticsearch —É—Å–ø–µ—à–Ω–æ")
        else:
            print("‚ùå –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Elasticsearch –Ω–µ —É–¥–∞–ª–æ—Å—å")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ registry
        documents = registry.get_documents()
        print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ registry: {len(documents)}")
        
        for doc in documents:
            print(f"  - {doc.__name__}")
            print(f"    Index: {doc._index._name}")
            print(f"    Model: {doc.Django.model.__name__}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            try:
                search = doc.search()
                print(f"    ‚úÖ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    success = test_connection()
    sys.exit(0 if success else 1) 