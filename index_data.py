#!/usr/bin/env python
import os
import sys
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from elasticsearch import Elasticsearch
from products.models import Product
import json

def index_data():
    """–ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ Elasticsearch"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Elasticsearch
        es = Elasticsearch(['http://localhost:9200'])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        if not es.ping():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Elasticsearch")
            return False
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Elasticsearch —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
        products = Product.objects.filter(is_active=True).select_related('category', 'seller').prefetch_related('product_images')
        
        print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ {products.count()} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏")
        
        # –ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
        for i, product in enumerate(products, 1):
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            doc = {
                'title': product.title,
                'description': product.description,
                'phone_model': product.phone_model,
                'price': float(product.price),
                'condition': product.condition,
                'is_active': product.is_active,
                'is_top': product.is_top,
                'color': product.color,
                'storage': product.storage,
                'screen_size': float(product.screen_size) if product.screen_size else None,
                'body_condition': product.body_condition,
                'screen_condition': product.screen_condition,
                'battery_health': product.battery_health,
                'turbo': product.turbo,
                'city': product.city,
                'package_contents': product.package_contents,
                'created_at': product.created_at.isoformat(),
                'updated_at': product.updated_at.isoformat(),
                'category_name': product.category.name if product.category else '',
                'seller_username': product.seller.username if product.seller else '',
                'rating': float(product.rating) if product.rating else 0.0,
                'main_image_url': str(product.main_image.url) if product.main_image else '',
                'image_count': product.product_images.count(),
                'display': product.display,
                'imei': product.imei,
                'sim': product.sim,
                'face': product.face,
                'market': product.market
            }
            
            # –£–¥–∞–ª—è–µ–º None –∑–Ω–∞—á–µ–Ω–∏—è
            doc = {k: v for k, v in doc.items() if v is not None}
            
            # –ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            es.index(index='products', id=product.id, body=doc)
            
            if i % 100 == 0:
                print(f"üìù –ü—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–æ {i} –ø—Ä–æ–¥—É–∫—Ç–æ–≤...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å
        es.indices.refresh(index='products')
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–æ {products.count()} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = index_data()
    sys.exit(0 if success else 1) 